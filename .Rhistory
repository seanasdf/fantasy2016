add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
bedcount
paste("bed",toString(10),sep="_")
?parse
parse("bed_10")
eval(parse("tomato"))
eval(parse("bed_10"))
parse("tomato")
x <- 42
eval(parse("x"))
?eval
#function to add plant to program's database
add_plant <- function (plant_name, daystoharvest, harvestlength) {
stringer_bell = toString(plant_name)
assign(stringer_bell,
c("Plant",
rep("Maintain",ceiling(daystoharvest/7)),
rep("Harvest", ceiling(harvestlength/7)),
"Rip Out"
),
envir = .GlobalEnv)
if (exists("plants")) {
if (!(is.element(stringer_bell, plants))) {
plants <<- c(plants, plant_name)
}
}
else {
plants <<- c(stringer_bell)
}
}
add_beds <- function(number_of_beds) {
if (!(exists("bedcount", envir = .GlobalEnv))) {
for (i in 1:number_of_beds) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)
}
bedcount <<- number_of_beds
}
else {
for (i in (bedcount + 1):(bedcount+number_of_beds)) {
assign(paste("bed_",toString(i),sep=""),
"",
envir = .GlobalEnv
)}
bedcount <<- bedcount + number_of_beds
}
}
plant_to_bed <- function(plant, bed) {
}
add_beds(100)
add_plant("tomato", 80, 50)
add_plant("eggplant", 100, 50)
add_plant("squash", 67, 50)
add_plant("squash", 67, 50)
squash
bed_1
?ppois
ppois(q = .55, 10, lower.tail = false)
ppois(q = .55, 10, lower.tail = FALSE)
ppois(.55, 1, lower.tail = FALSE)
ppois(0, 1, lower.tail = FALSE)
ppois(1, 1, lower.tail = FALSE)
9/1787
9/1787*100
ppois(5, 10, lower.tail =FALSE)
1877*100
1787/100
ppois(0, 17, lower.tail = FALSE)
ppois(9, 17.87, lower.tail = FALSE)
ppois(9, 5.59, lower.tail = FALSE)
ppois(5.59, 9, lower.tail = FALSE)
ppois(5.59, 9)
?power.t.test
power.t.test(n = 100, delta = .01, sd = .04, sig.level = .05, alternative = "one.sided")
power.t.test(n = 100, delta = .01, sd = .04, sig.level = .05)
power.t.test(n = 100, delta = .01, sd = .04, sig.level = .05, alternative = "one.sided", type = "one.sample")
power.t.test(n = 100, delta = .01, sd = .04, sig.level = .05, alternative = "one.sided", type = "one.sample", power = .90)
power.t.test(delta = .01, sd = .04, sig.level = .05, alternative = "one.sided", type = "one.sample")
power.t.test(delta = .01, sd = .04, sig.level = .05, alternative = "one.sided", type = "one.sample", power = .9)
pooled <- ((nx-1)*sx^2 + (ny-1)*sy^2))/(nx+ny-2)
xbar <- -3
nx <- 9
sx <- 1.5
ybar <- 1
ny <- 9
sy <- 1.8
pooled <- ((nx-1)*sx^2 + (ny-1)*sy^2)/(nx+ny-2)
pooled
(8*1.5^2 + 8*1.8^2)/16
?pt
-4/pooled
qt(-1.457, df = 16)
pt(-1.457, df=16)
pt(-1.457, df=16, lower.tail = FALSE)
pooled*(2/9)^.5
-4/1.294005
pt(-3.091178)
pt(-3.091178, df = 16)
ppois(9, 18, lower.tail = false)
ppois(9, 18, lower.tail = FALSE)
ppois(9, 18)
ppois(9, 17, lower.tail = FALSE)
ppois(9, 17.87, lower.tail = FALSE)
ppois(17, 10, lower.tail = FALSE)
ppois(17, 10)
results <- read.csv("./history/historicalresults.csv")
results <- read.csv("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016/history/historicalresults.csv")
results
results <- read.csv("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016/history/historicalresults.csv") %>%
select(1:4)
#set up file
setwd("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016")
library(dplyr)
#read in results from pre-2014
results <- read.csv("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016/history/historicalresults.csv") %>%
select(1:4)
#set up file
setwd("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016")
library(dplyr)
#read in results from pre-2014
results <- read.csv("./history/historicalresults.csv") %>%
select(1:4)
results
results[1:540, "year"]
results[1:540, 4]
18*3
results[1:540, 4] <- c(rep(2010, 18), rep(2011, 18), rep(2012, 18))
results
library(rvest)
standings.2014 <- read_html("./history/standings14.htm")
vignette("selectorgadget")
vignette("selectorgadget")
standings.14.tables <- html_nodes(standings.2014, ".fantTable")
standings.2014
standings.14.tables
clasS(standings.2014)
class(standings.2014)
standings.2014 <- standings.2014[[2]]
standings.14.tables <- html_nodes(standings.2014, ".fantTable")
standings.2014
standings.2014 <- read_html("./history/standings14.htm")
standings.2014 <- standings.2014[[2]]
standings.14.tables <- html_nodes(standings.2014, ".fantTable")
#read in the 2014 results
standings.2014 <- read_html("./history/standings14.htm")
standings.2014 <- standings.2014[2]
standings.14.tables <- html_nodes(standings.2014, ".fantTable")
standings.2014
standings.2014 <- read_html("./history/standings14.htm")
standings.2014
standings.2014[2]
standings.14.tables <- html_nodes(standings.2014[2], ".fantTable")
standings.14.tables <- html_nodes(standings.2014, "//*[contains(concat( " ", @class, " " ), concat( " ", "fantTable", " " ))]")
standings.14.tables <- html_nodes(standings.2014, "table")
standings.14.tables
?html_table
standings.14.tables <- html_table(standings.2014)
standings.14.tables
standings.2014 <- read_html("./history/standings14.htm")
standings.14.tables <- html_table(standings.2014)
standings.14.tables
?htmlnodes
html_nodes
?html_nodes
standings.14.tables <- html_nodes(standings.2014, ".standingsTable")
standings.14.tables
standings.14.tables <- html_nodes(standings.2014, "//*[contains(concat( " ", @class, " " ), concat( " ", "standingsTable", " " ))]")
standings.14.tables <- html_nodes(standings.2014, css= "//*[contains(concat( " ", @class, " " ), concat( " ", "standingsTable", " " ))]"
standings.14.tables <- html_nodes(standings.2014, css= "*[contains(concat( " ", @class, " " ), concat( " ", "standingsTable", " " ))]")
standings.14.tables <- html_nodes(standings.2014, css="fantTable standingsTable sg_rejected")
standings.14.tables
head(standings.14)
standings.14.tables <- html_nodes(standings.2014, xpath="//*[(@id = "standingsTable0")]")
standings.14.tables <- html_nodes(standings.2014, xpath="//standingsTable0")
standings.14.tables
standings.14.tables <- html_nodes(standings.2014, css="//standingsTable0")
standings.14.tables <- html_nodes(standings.2014, css="standingsTable0")
standings.14.tables
?html_attr
standings.14.tables <- html_attr(standings.2014, "standingsTable0")
standings.14.tables
standings.14.tables <- html_nodes(standings.2014, "standingsTable0")
standings.14.tables
standings.2014 <- read_html("./history/standings14.htm")
standings.2014 <- read_html("./history/standings14.htm")
standings.2014 <- read_html("./history/standings14.html")
standings.2014 <- read_html("./history/standings14.html")
standings.2014
standings.14.tables <- html_nodes(standings.2014, "standingsTable0")
standings.14.tables
standings.2014 <- read.csv("results2014.csv")
standings.2014 <- read.csv("./history/results2014.csv")
standings.2014
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv") %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014
standings.2014 <- melt(standings.2014)
library(reshape)
standings.2014 <- melt(standings.2014)
standings.2014
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv") %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP) %>%
mutate(year = 2014)
standings.2014 <- melt(standings.2014, id="year")
standings.2014
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv") %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP) %>%
mutate(year = 2014)
standings.2014
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP) %>%
mutate(year = 2014)
class(Standings)
standings.2014
sapply(standings.2014, to.numeric)
sapply(standings.2014, as.numeric)
Rstandings.2014[,c("R","K")]
standings.2014[,c("R","K")]
?gsub
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,",","")
sapply(standings.2014[,c("R","K")], gsub,",","")
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP) %>%
mutate(year = 2014)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014
standings.2014 <- melt(standings.2014, id="year")
standings.2014
results
head(results)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014")
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014")
standings.2014
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014") %>% select(3:4)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014") %>% select(2:4)
head(standings.2014)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014") %>% select(variable, value, year)
head(results)
head(standings.2014)
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014")
head(standings.2014)
names(standings.2014) <- c("index", "Category", "Value", "Year")
standings.2014 <- select(Category, Value, Year)
names(standings.2014) <- c("index", "Category", "Value", "Year")
standings.2014 <- select(Category, Value, Year)
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(year="2014")
names(standings.2014) <- c("index", "Category", "Value", "Year")
standings.2014 <- select(Category, Value, Year)
standings.2014
hea(standings.2014)
head(standings.2014)
standings.2014 <- select(Category, Value, Year)
standings.2014 <- select("Category", "Value", "Year")
head(results)
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014, id="year")
head(standings.2014)
standings.2014 <- melt(standings.2014, id="year") %>% mutate(Category = X2, Value = Value, Year="2014")
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = Value, Year=2014)
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014)
standings.2014
head(standings.2014)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014) %>% select(4:6)
head(standings2014)
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014) %>% select(4:6)
head(standings.2014)
head(results)
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014) %>% select(4:6) %>%
group_by(Category) %>%
arrange(Value)
standings.2014
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014) %>% select(4:6) %>%
group_by(Category) %>%
arrange(desc(Value)) %>%
mutate(Points=row_number(Value))
View(standings.2014)
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = X2, Value = value, Year=2014) %>% select(4:6) %>%
group_by(Category) %>%
arrange(desc(Value)) %>%
mutate(Points=min_rank(Value))
View(standings.2014)
standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),]
standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),"Points"]
standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),"Points"] <- 19-standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),"Points"]
View(standings.2014)
levels(results$Category)
levels(standings.2014$Category)
results$Category <- tolower(results$Category)
levels(results$Category)
tolower
?tolower
#set up file
setwd("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016")
library(dplyr)
library(reshape)
#read in results from pre-2014
results <- read.csv("./history/historicalresults.csv") %>%
select(1:4)
#fill in results for years that it is missing
results[1:540, 4] <- c(rep(2010, 18), rep(2011, 18), rep(2012, 18))
tolower(results$Category)
results$Category <- tolower(results$Category)
results
#set up file
setwd("C:/Users/Sean/Documents/Fantasy/fantasybaseball2016")
library(dplyr)
library(reshape)
#read in results from pre-2014
results <- read.csv("./history/historicalresults.csv") %>%
select(1:4)
#fill in results for years that it is missing
results[1:540, 4] <- c(rep(2010, 18), rep(2011, 18), rep(2012, 18))
#convert to lowercase
results$Category <- tolower(results$Category)
#read in the 2014 results
standings.2014 <- read.csv("./history/results2014.csv",stringsAsFactors = FALSE) %>%
select(R, HR, RBI, SB, Avg, W, K, Sv, ERA, WHIP)
standings.2014[,c("R","K")] <- sapply(standings.2014[,c("R","K")], gsub,pattern=",",replacement="")
standings.2014 <- sapply(standings.2014, as.numeric)
standings.2014 <- melt(standings.2014) %>% mutate(Category = tolower(X2), Value = value, Year=2014) %>% select(4:6) %>%
group_by(Category) %>%
arrange(desc(Value)) %>%
mutate(Points=min_rank(Value))
standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),"Points"] <- 19-standings.2014[standings.2014$Category %in% c("ERA", "WHIP"),"Points"]
head(results)
head(standings.2014)
head(rbind(results, standings.2014))
View(rbind(results, standings.2014))
